services:
  loan_api:
    build: .
    container_name: loan_api
    ports:
      - "8000:8000"
    networks:
      - loan-net
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test:
        [
          "CMD",
          "/app/.pixi/envs/default/bin/python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/health').read()",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - loan-net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro,z
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    depends_on:
      - loan_api

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - loan-net
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro,z
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

networks:
  loan-net:
    external: true

volumes:
  prometheus_data:
  grafana_data:
